(setq set-template "
<a name=\"<%=setname%>\"></a>
<h3><%=setname%></h3>
<table cellpadding=\"0\" cellspacing=\"0\">
	<%=symbols%>
</table>
")

(setq symbol-template "
<tr class=\"<%=status%>\"><td class=\"symbol\"><a href=\"../symbols/lisp.<%=class%>.html#<%=name%>\"><code><%=name%></code></a></td><td class=\"type\"><%=type%></td><td class=\"notes\"><%=notes%></td></tr>
")

(setq symbols
	'(("Symbols"
		(:name "*" :status "done" :type "function" :notes "")
		(:name "*" :status "noPlans" :type "variable" :notes "")
		(:name "**" :status "noPlans" :type "variable" :notes "")
		(:name "***" :status "noPlans" :type "variable" :notes "")
		(:name "+" :status "done" :type "function" :notes "")
		(:name "+" :status "noPlans" :type "variable" :notes "")
		(:name "++" :status "noPlans" :type "variable" :notes "")
		(:name "+++" :status "noPlans" :type "variable" :notes "")
		(:name "-" :status "done" :type "function" :notes "")
		(:name "-" :status "noPlans" :type "variable" :notes "")
		(:name "/" :status "done" :type "function" :notes "")
		(:name "/" :status "noPlans" :type "variable" :notes "")
		(:name "//" :status "noPlans" :type "variable" :notes "")
		(:name "///" :status "noPlans" :type "variable" :notes "")
		(:name "1+" :status "done" :type "function" :notes "")
		(:name "1-" :status "done" :type "function" :notes "")
		(:name "&lt;" :status "done" :type "function" :notes "")
		(:name "&lt;=" :status "done" :type "function" :notes "")
		(:name "&gt;" :status "done" :type "function" :notes "")
		(:name "&gt;=" :status "done" :type "function" :notes ""))
	  ("A"
		(:name "abort" :status "notDone" :type "function" :notes "")
		(:name "abs" :status "notDone" :type "function" :notes "")
		(:name "acons" :status "notDone" :type "function" :notes "")
		(:name "acos" :status "notDone" :type "function" :notes "")
		(:name "acosh" :status "notDone" :type "function" :notes "")
		(:name "add-method" :status "notDone" :type "generic function" :notes "")
		(:name "adjoin" :status "notDone" :type "function" :notes "")
		(:name "adjust-array" :status "notDone" :type "function" :notes "")
		(:name "adjustable-array-p" :status "notDone" :type "function" :notes "")
		(:name "alpha-char-p" :status "notDone" :type "function" :notes "")
		(:name "alphanumericp" :status "notDone" :type "function" :notes "")
		(:name "alter" :status "notDone" :type "function" :notes "")
		(:name "always" :status "notDone" :type "loop clause" :notes "")
		(:name "and" :status "done" :type "macro" :notes "")
		(:name "append" :status "notDone" :type "function" :notes "")
		(:name "append" :status "notDone" :type "loop clause" :notes "")
		(:name "appending" :status "notDone" :type "loop clause" :notes "")
		(:name "apply" :status "done" :type "function" :notes "")
		(:name "applyhook" :status "notDone" :type "function" :notes "")
		(:name "*applyhook*" :status "notDone" :type "variable" :notes "")
		(:name "apropos" :status "notDone" :type "function" :notes "")
		(:name "apropos-list" :status "notDone" :type "function" :notes "")
		(:name "aref" :status "notDone" :type "function" :notes "")
		(:name "arithmetic-error" :status "notDone" :type "type" :notes "")
		(:name "arithmetic-error-operands" :status "notDone" :type "function" :notes "")
		(:name "arithmetic-error-operation" :status "notDone" :type "function" :notes "")
		(:name "array-dimension" :status "notDone" :type "function" :notes "")
		(:name "array-dimension-limit" :status "notDone" :type "constant" :notes "")
		(:name "array-dimensions" :status "notDone" :type "function" :notes "")
		(:name "array-element-type" :status "notDone" :type "function" :notes "")
		(:name "array-has-fill-pointer-p" :status "notDone" :type "function" :notes "")
		(:name "array-in-bounds-p" :status "notDone" :type "function" :notes "")
		(:name "array-rank" :status "notDone" :type "function" :notes "")
		(:name "array-rank-limit" :status "notDone" :type "constant" :notes "")
		(:name "array-row-major-index" :status "notDone" :type "function" :notes "")
		(:name "array-total-size" :status "notDone" :type "function" :notes "")
		(:name "array-total-size-limit" :status "notDone" :type "constant" :notes "")
		(:name "arrayp" :status "notDone" :type "function" :notes "")
		(:name "as" :status "notDone" :type "loop clause" :notes "")
		(:name "ash" :status "notDone" :type "function" :notes "")
		(:name "asin" :status "notDone" :type "function" :notes "")
		(:name "asinh" :status "notDone" :type "function" :notes "")
		(:name "assert" :status "done" :type "function (was macro)" :notes "Modified. As js-lisp doesn't currently have conditions and restarts, that functionality has been removed from assert. Now it only takes 2 arguments -- the expression to evaluate in a boolean context, and the error message should it evaluate to false.")
		(:name "assoc" :status "notDone" :type "function" :notes "")
		(:name "assoc-if" :status "notDone" :type "function" :notes "")
		(:name "assoc-if-not" :status "notDone" :type "function" :notes "")
		(:name "atan" :status "notDone" :type "function" :notes "")
		(:name "atanh" :status "notDone" :type "function" :notes "")
		(:name "atom" :status "notDone" :type "function" :notes "")
		(:name "augment-environment" :status "notDone" :type "function" :notes ""))
	  ("B"
		(:name "bit" :status "notDone" :type "function" :notes "")
		(:name "bit-and" :status "notDone" :type "function" :notes "")
		(:name "bit-andc1" :status "notDone" :type "function" :notes "")
		(:name "bit-andc2" :status "notDone" :type "function" :notes "")
		(:name "bit-eqv" :status "notDone" :type "function" :notes "")
		(:name "bit-ior" :status "notDone" :type "function" :notes "")
		(:name "bit-nand" :status "notDone" :type "function" :notes "")
		(:name "bit-nor" :status "notDone" :type "function" :notes "")
		(:name "bit-not" :status "notDone" :type "function" :notes "")
		(:name "bit-orc1" :status "notDone" :type "function" :notes "")
		(:name "bit-orc2" :status "notDone" :type "function" :notes "")
		(:name "bit-vector-p" :status "notDone" :type "function" :notes "")
		(:name "bit-xor" :status "notDone" :type "function" :notes "")
		(:name "block" :status "notDone" :type "special form" :notes "")
		(:name "boole" :status "notDone" :type "function" :notes "")
		(:name "both-case-p" :status "notDone" :type "function" :notes "")
		(:name "boundp" :status "notDone" :type "function" :notes "")
		(:name "break" :status "notDone" :type "function" :notes "")
		(:name "break" :status "notDone" :type "function" :notes "")
		(:name "*break-on-signals*" :status "notDone" :type "variable" :notes "")
		(:name "*break-on-warnings*" :status "notDone" :type "variable" :notes "")
		(:name "broadcast-stream-streams" :status "notDone" :type "function" :notes "")
		(:name "butlast" :status "notDone" :type "function" :notes "")
		(:name "byte" :status "notDone" :type "function" :notes "")
		(:name "byte-position" :status "notDone" :type "function" :notes "")
		(:name "byte-size" :status "notDone" :type "function" :notes ""))
	  ("C"
		(:name "caaaar" :status "notDone" :type "function" :notes "")
		(:name "caaadr" :status "notDone" :type "function" :notes "")
		(:name "caaar" :status "notDone" :type "function" :notes "")
		(:name "caadar" :status "notDone" :type "function" :notes "")
		(:name "caaddr" :status "notDone" :type "function" :notes "")
		(:name "caadr" :status "notDone" :type "function" :notes "")
		(:name "caar" :status "notDone" :type "function" :notes "")
		(:name "cadaar" :status "notDone" :type "function" :notes "")
		(:name "cadadr" :status "notDone" :type "function" :notes "")
		(:name "cadar" :status "notDone" :type "function" :notes "")
		(:name "caddar" :status "notDone" :type "function" :notes "")
		(:name "cadddr" :status "notDone" :type "function" :notes "")
		(:name "caddr" :status "notDone" :type "function" :notes "")
		(:name "cadr" :status "notDone" :type "function" :notes "")
		(:name "call-arguments-limit" :status "notDone" :type "constant" :notes "")
		(:name "call-method" :status "notDone" :type "macro" :notes "")
		(:name "call-next-method" :status "notDone" :type "function" :notes "")
		(:name "car" :status "notDone" :type "function" :notes "")
		(:name "case" :status "notDone" :type "macro" :notes "")
		(:name "catch" :status "notDone" :type "special form" :notes "")
		(:name "catenate" :status "notDone" :type "function" :notes "")
		(:name "ccase" :status "notDone" :type "macro" :notes "")
		(:name "ccase" :status "notDone" :type "macro" :notes "")
		(:name "cdaaar" :status "notDone" :type "function" :notes "")
		(:name "cdaadr" :status "notDone" :type "function" :notes "")
		(:name "cdaar" :status "notDone" :type "function" :notes "")
		(:name "cdadar" :status "notDone" :type "function" :notes "")
		(:name "cdaddr" :status "notDone" :type "function" :notes "")
		(:name "cdadr" :status "notDone" :type "function" :notes "")
		(:name "cdar" :status "notDone" :type "function" :notes "")
		(:name "cddaar" :status "notDone" :type "function" :notes "")
		(:name "cddadr" :status "notDone" :type "function" :notes "")
		(:name "cddar" :status "notDone" :type "function" :notes "")
		(:name "cdddar" :status "notDone" :type "function" :notes "")
		(:name "cddddr" :status "notDone" :type "function" :notes "")
		(:name "cdddr" :status "notDone" :type "function" :notes "")
		(:name "cddr" :status "notDone" :type "function" :notes "")
		(:name "cdr" :status "notDone" :type "function" :notes "")
		(:name "ceiling" :status "notDone" :type "function" :notes "")
		(:name "cell-error" :status "notDone" :type "type" :notes "")
		(:name "cell-error-name" :status "notDone" :type "function" :notes "")
		(:name "cerror" :status "notDone" :type "function" :notes "")
		(:name "cerror" :status "notDone" :type "function" :notes "")
		(:name "change-class" :status "notDone" :type "generic function" :notes "")
		(:name "char" :status "notDone" :type "function" :notes "")
		(:name "char-bit" :status "notDone" :type "function" :notes "")
		(:name "char-bits" :status "notDone" :type "function" :notes "")
		(:name "char-bits-limit" :status "notDone" :type "constant" :notes "")
		(:name "char-code" :status "notDone" :type "function" :notes "")
		(:name "char-code-limit" :status "notDone" :type "constant" :notes "")
		(:name "char-control-bit" :status "notDone" :type "constant" :notes "")
		(:name "char-downcase" :status "notDone" :type "function" :notes "")
		(:name "char-equal" :status "notDone" :type "function" :notes "")
		(:name "char-font" :status "notDone" :type "function" :notes "")
		(:name "char-font-limit" :status "notDone" :type "constant" :notes "")
		(:name "char-greaterp" :status "notDone" :type "function" :notes "")
		(:name "char-hyper-bit" :status "notDone" :type "constant" :notes "")
		(:name "char-int" :status "notDone" :type "function" :notes "")
		(:name "char-lessp" :status "notDone" :type "function" :notes "")
		(:name "char-meta-bit" :status "notDone" :type "constant" :notes "")
		(:name "char-name" :status "notDone" :type "function" :notes "")
		(:name "char-not-equal" :status "notDone" :type "function" :notes "")
		(:name "char-not-greaterp" :status "notDone" :type "function" :notes "")
		(:name "char-not-lessp" :status "notDone" :type "function" :notes "")
		(:name "char-super-bit" :status "notDone" :type "constant" :notes "")
		(:name "char-upcase" :status "notDone" :type "function" :notes "")
		(:name "char/=" :status "notDone" :type "function" :notes "")
		(:name "char&lt;" :status "notDone" :type "function" :notes "")
		(:name "char&lt;=" :status "notDone" :type "function" :notes "")
		(:name "char&gt;" :status "notDone" :type "function" :notes "")
		(:name "char&gt;=" :status "notDone" :type "function" :notes "")
		(:name "character" :status "notDone" :type "function" :notes "")
		(:name "characterp" :status "notDone" :type "function" :notes "")
		(:name "check-type" :status "notDone" :type "macro" :notes "")
		(:name "check-type" :status "notDone" :type "macro" :notes "")
		(:name "choose" :status "notDone" :type "function" :notes "")
		(:name "choose-if" :status "notDone" :type "function" :notes "")
		(:name "chunk" :status "notDone" :type "function" :notes "")
		(:name "cis" :status "notDone" :type "function" :notes "")
		(:name "class-name" :status "notDone" :type "generic function" :notes "")
		(:name "class-of" :status "notDone" :type "function" :notes "")
		(:name "clear-input" :status "notDone" :type "function" :notes "")
		(:name "close" :status "notDone" :type "function" :notes "")
		(:name "clrhash" :status "notDone" :type "function" :notes "")
		(:name "code-char" :status "notDone" :type "function" :notes "")
		(:name "coerce" :status "notDone" :type "function" :notes "")
		(:name "collect" :status "notDone" :type "loop clause" :notes "")
		(:name "collect" :status "notDone" :type "function" :notes "")
		(:name "collect-alist" :status "notDone" :type "function" :notes "")
		(:name "collect-and" :status "notDone" :type "function" :notes "")
		(:name "collect-append" :status "notDone" :type "function" :notes "")
		(:name "collect-file" :status "notDone" :type "function" :notes "")
		(:name "collect-first" :status "notDone" :type "function" :notes "")
		(:name "collect-fn" :status "notDone" :type "function" :notes "")
		(:name "collect-hash" :status "notDone" :type "function" :notes "")
		(:name "collect-last" :status "notDone" :type "function" :notes "")
		(:name "collect-length" :status "notDone" :type "function" :notes "")
		(:name "collect-max" :status "notDone" :type "function" :notes "")
		(:name "collect-min" :status "notDone" :type "function" :notes "")
		(:name "collect-nconc" :status "notDone" :type "function" :notes "")
		(:name "collect-nth" :status "notDone" :type "function" :notes "")
		(:name "collect-or" :status "notDone" :type "function" :notes "")
		(:name "collect-plist" :status "notDone" :type "function" :notes "")
		(:name "collect-sum" :status "notDone" :type "function" :notes "")
		(:name "collecting" :status "notDone" :type "loop clause" :notes "")
		(:name "collecting-fn" :status "notDone" :type "function" :notes "")
		(:name "commonp" :status "notDone" :type "function" :notes "")
		(:name "compile" :status "notDone" :type "function" :notes "")
		(:name "compile-file" :status "notDone" :type "function" :notes "")
		(:name "compile-file-pathname" :status "notDone" :type "function" :notes "")
		(:name "*compile-file-pathname*" :status "notDone" :type "variable" :notes "")
		(:name "*compile-file-truename*" :status "notDone" :type "variable" :notes "")
		(:name "*compile-print*" :status "notDone" :type "variable" :notes "")
		(:name "*compile-verbose*" :status "notDone" :type "variable" :notes "")
		(:name "compiled-function-p" :status "notDone" :type "function" :notes "")
		(:name "compiler-let" :status "notDone" :type "special form" :notes "")
		(:name "compiler-let" :status "notDone" :type "macro" :notes "")
		(:name "compiler-macro-function" :status "notDone" :type "function" :notes "")
		(:name "compiler-macroexpand" :status "notDone" :type "function" :notes "")
		(:name "compiler-macroexpand-1" :status "notDone" :type "function" :notes "")
		(:name "complement" :status "notDone" :type "function" :notes "")
		(:name "complex" :status "notDone" :type "function" :notes "")
		(:name "complexp" :status "notDone" :type "function" :notes "")
		(:name "compute-applicable-methods" :status "notDone" :type "function" :notes "")
		(:name "compute-restarts" :status "notDone" :type "function" :notes "")
		(:name "concat" :status "done" :type "function" :notes "Renamed from \"concatenate\". Modified. concat only takes a list of strings now, not any type, and thus does not require you supply the return type. It returns the given strings joined together as one.")
		(:name "concatenated-stream-streams" :status "notDone" :type "function" :notes "")
		(:name "cond" :status "done" :type "macro" :notes "")
		(:name "condition" :status "notDone" :type "type" :notes "")
		(:name "conjugate" :status "notDone" :type "function" :notes "")
		(:name "cons" :status "notDone" :type "function" :notes "")
		(:name "consp" :status "notDone" :type "function" :notes "")
		(:name "constantp" :status "notDone" :type "function" :notes "")
		(:name "continue" :status "notDone" :type "function" :notes "")
		(:name "control-error" :status "notDone" :type "type" :notes "")
		(:name "copy-alist" :status "notDone" :type "function" :notes "")
		(:name "copy-list" :status "notDone" :type "function" :notes "")
		(:name "copy-pprint-dispatch" :status "notDone" :type "function" :notes "")
		(:name "copy-readtable" :status "notDone" :type "function" :notes "")
		(:name "copy-seq" :status "notDone" :type "function" :notes "")
		(:name "copy-symbol" :status "notDone" :type "function" :notes "")
		(:name "copy-tree" :status "notDone" :type "function" :notes "")
		(:name "cos" :status "notDone" :type "function" :notes "")
		(:name "cosh" :status "notDone" :type "function" :notes "")
		(:name "cotruncate" :status "notDone" :type "function" :notes "")
		(:name "count" :status "notDone" :type "function" :notes "")
		(:name "count" :status "notDone" :type "loop clause" :notes "")
		(:name "count-if" :status "notDone" :type "function" :notes "")
		(:name "count-if-not" :status "notDone" :type "function" :notes "")
		(:name "counting" :status "notDone" :type "loop clause" :notes "")
		(:name "ctypecase" :status "notDone" :type "macro" :notes "")
		(:name "ctypecase" :status "notDone" :type "macro" :notes ""))
	  ("D"
		(:name "*debug-io*" :status "notDone" :type "variable" :notes "")
		(:name "*debugger-hook*" :status "notDone" :type "variable" :notes "")
		(:name "decf" :status "notDone" :type "macro" :notes "")
		(:name "declaim" :status "notDone" :type "macro" :notes "")
		(:name "declaration-information" :status "notDone" :type "function" :notes "")
		(:name "declare" :status "notDone" :type "special form" :notes "")
		(:name "decode-float" :status "notDone" :type "function" :notes "")
		(:name "decode-universal-time" :status "notDone" :type "function" :notes "")
		(:name "*default-pathname-defaults*" :status "notDone" :type "variable" :notes "")
		(:name "defclass" :status "notDone" :type "macro" :notes "")
		(:name "defgeneric" :status "notDone" :type "macro" :notes "")
		(:name "define-compiler-macro" :status "notDone" :type "macro" :notes "")
		(:name "define-condition" :status "notDone" :type "macro" :notes "")
		(:name "define-declaration" :status "notDone" :type "macro" :notes "")
		(:name "define-method-combination" :status "notDone" :type "macro" :notes "")
		(:name "define-modify-macro" :status "notDone" :type "macro" :notes "")
		(:name "define-setf-method" :status "notDone" :type "macro" :notes "")
		(:name "defmacro" :status "notDone" :type "macro" :notes "")
		(:name "defmethod" :status "notDone" :type "macro" :notes "")
		(:name "defpackage" :status "notDone" :type "macro" :notes "")
		(:name "defstruct" :status "notDone" :type "macro" :notes "")
		(:name "deftype" :status "notDone" :type "macro" :notes "")
		(:name "defun" :status "done" :type "macro" :notes "")
		(:name "defvar" :status "notDone" :type "macro" :notes "")
		(:name "delete" :status "notDone" :type "function" :notes "")
		(:name "delete-duplicates" :status "notDone" :type "function" :notes "")
		(:name "delete-file" :status "notDone" :type "function" :notes "")
		(:name "delete-if" :status "notDone" :type "function" :notes "")
		(:name "delete-if-not" :status "notDone" :type "function" :notes "")
		(:name "delete-package" :status "notDone" :type "function" :notes "")
		(:name "denominator" :status "notDone" :type "function" :notes "")
		(:name "deposit-field" :status "notDone" :type "function" :notes "")
		(:name "describe" :status "notDone" :type "function" :notes "")
		(:name "describe-object" :status "notDone" :type "generic function" :notes "")
		(:name "destructuring-bind" :status "notDone" :type "macro" :notes "")
		(:name "digit-char" :status "notDone" :type "function" :notes "")
		(:name "digit-char-p" :status "notDone" :type "function" :notes "")
		(:name "directory" :status "notDone" :type "function" :notes "")
		(:name "directory-namestring" :status "notDone" :type "function" :notes "")
		(:name "disassemble" :status "notDone" :type "function" :notes "")
		(:name "division-by-zero" :status "notDone" :type "type" :notes "")
		(:name "do" :status "notDone" :type "macro" :notes "")
		(:name "do" :status "notDone" :type "loop clause" :notes "")
		(:name "do*" :status "notDone" :type "macro" :notes "")
		(:name "do-all-symbols" :status "notDone" :type "macro" :notes "")
		(:name "do-external-symbols" :status "notDone" :type "macro" :notes "")
		(:name "do-symbols" :status "notDone" :type "macro" :notes "")
		(:name "documentation" :status "notDone" :type "function" :notes "")
		(:name "documentation" :status "notDone" :type "generic function" :notes "")
		(:name "doing" :status "notDone" :type "loop clause" :notes "")
		(:name "dolist" :status "notDone" :type "macro" :notes "")
		(:name "dotimes" :status "notDone" :type "macro" :notes "")
		(:name "double-float-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "double-float-negative-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "dpb" :status "notDone" :type "function" :notes "")
		(:name "dribble" :status "notDone" :type "function" :notes ""))
	  ("E"
		(:name "ecase" :status "notDone" :type "macro" :notes "")
		(:name "ecase" :status "notDone" :type "macro" :notes "")
		(:name "echo-stream-input-stream" :status "notDone" :type "function" :notes "")
		(:name "echo-stream-output-stream" :status "notDone" :type "function" :notes "")
		(:name "ed" :status "notDone" :type "function" :notes "")
		(:name "eighth" :status "notDone" :type "function" :notes "")
		(:name "elt" :status "notDone" :type "function" :notes "")
		(:name "encapsulated" :status "notDone" :type "macro" :notes "")
		(:name "enclose" :status "notDone" :type "function" :notes "")
		(:name "encode-universal-time" :status "notDone" :type "function" :notes "")
		(:name "end-of-file" :status "notDone" :type "type" :notes "")
		(:name "endp" :status "notDone" :type "function" :notes "")
		(:name "enough-namestring" :status "notDone" :type "function" :notes "")
		(:name "ensure-generic-function" :status "notDone" :type "function" :notes "")
		(:name "eq" :status "notDone" :type "function" :notes "")
		(:name "eql" :status "notDone" :type "function" :notes "")
		(:name "equal" :status "notDone" :type "function" :notes "")
		(:name "equalp" :status "notDone" :type "function" :notes "")
		(:name "error" :status "notDone" :type "function" :notes "")
		(:name "error" :status "notDone" :type "function" :notes "")
		(:name "error" :status "notDone" :type "type" :notes "")
		(:name "*error-output*" :status "notDone" :type "variable" :notes "")
		(:name "etypecase" :status "notDone" :type "macro" :notes "")
		(:name "etypecase" :status "notDone" :type "macro" :notes "")
		(:name "eval" :status "notDone" :type "function" :notes "")
		(:name "eval-when" :status "notDone" :type "special form" :notes "")
		(:name "evalhook" :status "notDone" :type "function" :notes "")
		(:name "*evalhook*" :status "notDone" :type "variable" :notes "")
		(:name "evenp" :status "notDone" :type "function" :notes "")
		(:name "every" :status "notDone" :type "function" :notes "")
		(:name "exp" :status "notDone" :type "function" :notes "")
		(:name "expand" :status "notDone" :type "function" :notes "")
		(:name "export" :status "notDone" :type "function" :notes "")
		(:name "expt" :status "notDone" :type "function" :notes ""))
	  ("F"
		(:name "f" :status "notDone" :type "generic function" :notes "")
		(:name "fboundp" :status "notDone" :type "function" :notes "")
		(:name "fdefinition" :status "notDone" :type "function" :notes "")
		(:name "*features*" :status "notDone" :type "variable" :notes "")
		(:name "ffloor" :status "notDone" :type "function" :notes "")
		(:name "fifth" :status "notDone" :type "function" :notes "")
		(:name "file-author" :status "notDone" :type "function" :notes "")
		(:name "file-error" :status "notDone" :type "type" :notes "")
		(:name "file-error-pathname" :status "notDone" :type "function" :notes "")
		(:name "file-length" :status "notDone" :type "function" :notes "")
		(:name "file-namestring" :status "notDone" :type "function" :notes "")
		(:name "file-position" :status "notDone" :type "function" :notes "")
		(:name "file-string-length" :status "notDone" :type "function" :notes "")
		(:name "file-write-date" :status "notDone" :type "function" :notes "")
		(:name "fill" :status "notDone" :type "function" :notes "")
		(:name "fill-pointer" :status "notDone" :type "function" :notes "")
		(:name "finally" :status "notDone" :type "loop clause" :notes "")
		(:name "find" :status "notDone" :type "function" :notes "")
		(:name "find-all-symbols" :status "notDone" :type "function" :notes "")
		(:name "find-class" :status "notDone" :type "function" :notes "")
		(:name "find-if" :status "notDone" :type "function" :notes "")
		(:name "find-if-not" :status "notDone" :type "function" :notes "")
		(:name "find-method" :status "notDone" :type "generic function" :notes "")
		(:name "find-package" :status "notDone" :type "function" :notes "")
		(:name "find-restart" :status "notDone" :type "function" :notes "")
		(:name "find-symbol" :status "notDone" :type "function" :notes "")
		(:name "finish-output" :status "notDone" :type "function" :notes "")
		(:name "first" :status "done" :type "function" :notes "Modified. Returns the first element of any sequence-like object (actually, simply returns element 0 of any object that has it). This includes arrays, strings, the arguments object passed into functions, etc.")
		(:name "flet" :status "notDone" :type "special form" :notes "")
		(:name "float" :status "notDone" :type "function" :notes "")
		(:name "float-digits" :status "notDone" :type "function" :notes "")
		(:name "float-precision" :status "notDone" :type "function" :notes "")
		(:name "float-radix" :status "notDone" :type "function" :notes "")
		(:name "float-sign" :status "notDone" :type "function" :notes "")
		(:name "floating-point-overflow" :status "notDone" :type "type" :notes "")
		(:name "floating-point-underflow" :status "notDone" :type "type" :notes "")
		(:name "floatp" :status "notDone" :type "function" :notes "")
		(:name "floor" :status "notDone" :type "function" :notes "")
		(:name "for" :status "notDone" :type "loop clause" :notes "")
		(:name "format" :status "done" :type "function" :notes "Modified. This function uses a JavaScript version of the php format language.")
		(:name "formatter" :status "notDone" :type "macro" :notes "")
		(:name "fourth" :status "notDone" :type "function" :notes "")
		(:name "funcall" :status "done" :type "macro (was function)" :notes "Modified. Takes an object as its first argument, and a dot-path (e.g. prop.prop.func) pointing to a function on the given object to call.")
		(:name "function" :status "done" :type "special form" :notes "")
		(:name "function-information" :status "notDone" :type "function" :notes "")
		(:name "function-keywords" :status "notDone" :type "generic function" :notes "")
		(:name "function-lambda-expression" :status "notDone" :type "function" :notes "")
		(:name "functionp" :status "notDone" :type "function" :notes ""))
	  ("G"
		(:name "gatherer" :status "notDone" :type "function" :notes "")
		(:name "gathering" :status "notDone" :type "macro" :notes "")
		(:name "gcd" :status "notDone" :type "function" :notes "")
		(:name "generator" :status "notDone" :type "function" :notes "")
		(:name "generic-flet" :status "notDone" :type "special form" :notes "")
		(:name "generic-function" :status "notDone" :type "macro" :notes "")
		(:name "generic-labels" :status "notDone" :type "special form" :notes "")
		(:name "gensym" :status "done" :type "function" :notes "Modified. Does not accept any arguments. Simply returns a random symbol, very much like a guid, and that's it.")
		(:name "*gensym-counter*" :status "notDone" :type "variable" :notes "")
		(:name "gentemp" :status "notDone" :type "function" :notes "")
		(:name "get" :status "notDone" :type "function" :notes "")
		(:name "get-decoded-time" :status "notDone" :type "function" :notes "")
		(:name "get-internal-real-time" :status "notDone" :type "function" :notes "")
		(:name "get-internal-run-time" :status "notDone" :type "function" :notes "")
		(:name "get-output-stream-string" :status "notDone" :type "function" :notes "")
		(:name "get-properties" :status "notDone" :type "function" :notes "")
		(:name "get-setf-method" :status "notDone" :type "function" :notes "")
		(:name "get-setf-method-multiple-value" :status "notDone" :type "function" :notes "")
		(:name "get-universal-time" :status "notDone" :type "function" :notes "")
		(:name "getf" :status "notDone" :type "function" :notes "")
		(:name "gethash" :status "notDone" :type "function" :notes "")
		(:name "go" :status "notDone" :type "special form" :notes "")
		(:name "graphic-char-p" :status "notDone" :type "function" :notes ""))
	  ("H"
		(:name "handler-bind" :status "notDone" :type "macro" :notes "")
		(:name "handler-case" :status "notDone" :type "macro" :notes "")
		(:name "hash-table-count" :status "notDone" :type "function" :notes "")
		(:name "hash-table-p" :status "notDone" :type "function" :notes "")
		(:name "hash-table-rehash-size" :status "notDone" :type "function" :notes "")
		(:name "hash-table-rehash-threshold" :status "notDone" :type "function" :notes "")
		(:name "hash-table-size" :status "notDone" :type "function" :notes "")
		(:name "hash-table-test" :status "notDone" :type "function" :notes "")
		(:name "host-namestring" :status "notDone" :type "function" :notes ""))
	  ("I"
		(:name "identity" :status "notDone" :type "function" :notes "")
		(:name "if" :status "notDone" :type "special form" :notes "")
		(:name "if" :status "notDone" :type "loop clause" :notes "")
		(:name "ignore-errors" :status "notDone" :type "macro" :notes "")
		(:name "imagpart" :status "notDone" :type "function" :notes "")
		(:name "import" :status "notDone" :type "function" :notes "")
		(:name "in-package" :status "notDone" :type "function" :notes "")
		(:name "in-package" :status "notDone" :type "macro" :notes "")
		(:name "incf" :status "notDone" :type "macro" :notes "")
		(:name "initialize-instance" :status "notDone" :type "generic function" :notes "")
		(:name "initially" :status "notDone" :type "loop clause" :notes "")
		(:name "input-stream-p" :status "notDone" :type "function" :notes "")
		(:name "inspect" :status "notDone" :type "function" :notes "")
		(:name "int-char" :status "notDone" :type "function" :notes "")
		(:name "integer-decode-float" :status "notDone" :type "function" :notes "")
		(:name "integer-length" :status "notDone" :type "function" :notes "")
		(:name "integerp" :status "notDone" :type "function" :notes "")
		(:name "interactive-stream-p" :status "notDone" :type "function" :notes "")
		(:name "intern" :status "notDone" :type "function" :notes "")
		(:name "internal-time-units-per-second" :status "notDone" :type "constant" :notes "")
		(:name "intersection" :status "notDone" :type "function" :notes "")
		(:name "invalid-method-error" :status "notDone" :type "function" :notes "")
		(:name "invoke-debugger" :status "notDone" :type "function" :notes "")
		(:name "invoke-restart" :status "notDone" :type "function" :notes "")
		(:name "isqrt" :status "notDone" :type "function" :notes "")
		(:name "iterate" :status "notDone" :type "macro" :notes ""))
	  ("K"
		(:name "keywordp" :status "notDone" :type "function" :notes ""))
	  ("L"
		(:name "lambda-list-keywords" :status "notDone" :type "constant" :notes "")
		(:name "lambda-parameters-limit" :status "notDone" :type "constant" :notes "")
		(:name "last" :status "notDone" :type "function" :notes "")
		(:name "lambda" :status "done" :type "macro" :notes "")
		(:name "latch" :status "notDone" :type "function" :notes "")
		(:name "lcm" :status "notDone" :type "function" :notes "")
		(:name "ldb" :status "notDone" :type "function" :notes "")
		(:name "ldb-test" :status "notDone" :type "function" :notes "")
		(:name "ldiff" :status "notDone" :type "function" :notes "")
		(:name "least-negative-double-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-long-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-normalized-double-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-normalized-long-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-normalized-short-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-normalized-single-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-short-float" :status "notDone" :type "constant" :notes "")
		(:name "least-negative-single-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-double-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-long-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-normalized-double-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-normalized-long-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-normalized-short-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-normalized-single-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-short-float" :status "notDone" :type "constant" :notes "")
		(:name "least-positive-single-float" :status "notDone" :type "constant" :notes "")
		(:name "length" :status "done" :type "function" :notes "")
		(:name "let" :status "done" :type "macro (was special form)" :notes "Modified. Behaves like let* (let expressions can access the values of previous expressions in the let).")
		(:name "let*" :status "noPlans" :type "special form" :notes "Functionality performed by let.")
		(:name "lisp-implementation-type" :status "notDone" :type "function" :notes "")
		(:name "lisp-implementation-version" :status "notDone" :type "function" :notes "")
		(:name "list" :status "done" :type "function" :notes "Modified. Returns a JavaScript Array instead of a Cons list.")
		(:name "list*" :status "notDone" :type "function" :notes "")
		(:name "list-all-packages" :status "notDone" :type "function" :notes "")
		(:name "list-length" :status "notDone" :type "function" :notes "")
		(:name "listen" :status "notDone" :type "function" :notes "")
		(:name "listp" :status "notDone" :type "function" :notes "")
		(:name "load" :status "notDone" :type "function" :notes "")
		(:name "load-logical-pathname-translations" :status "notDone" :type "function" :notes "")
		(:name "*load-pathname*" :status "notDone" :type "variable" :notes "")
		(:name "*load-print*" :status "notDone" :type "variable" :notes "")
		(:name "load-time-value" :status "notDone" :type "special form" :notes "")
		(:name "*load-truename*" :status "notDone" :type "variable" :notes "")
		(:name "*load-verbose*" :status "notDone" :type "variable" :notes "")
		(:name "locally" :status "notDone" :type "macro" :notes "")
		(:name "locally" :status "notDone" :type "special form" :notes "")
		(:name "log" :status "notDone" :type "function" :notes "")
		(:name "logand" :status "notDone" :type "function" :notes "")
		(:name "logandc1" :status "notDone" :type "function" :notes "")
		(:name "logandc2" :status "notDone" :type "function" :notes "")
		(:name "logbitp" :status "notDone" :type "function" :notes "")
		(:name "logcount" :status "notDone" :type "function" :notes "")
		(:name "logeqv" :status "notDone" :type "function" :notes "")
		(:name "logical-pathname" :status "notDone" :type "class" :notes "")
		(:name "logical-pathname" :status "notDone" :type "function" :notes "")
		(:name "logical-pathname-translations" :status "notDone" :type "function" :notes "")
		(:name "logior" :status "notDone" :type "function" :notes "")
		(:name "lognand" :status "notDone" :type "function" :notes "")
		(:name "lognor" :status "notDone" :type "function" :notes "")
		(:name "lognot" :status "notDone" :type "function" :notes "")
		(:name "logorc1" :status "notDone" :type "function" :notes "")
		(:name "logorc2" :status "notDone" :type "function" :notes "")
		(:name "logtest" :status "notDone" :type "function" :notes "")
		(:name "logxor" :status "notDone" :type "function" :notes "")
		(:name "long-float-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "long-float-negative-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "long-site-name" :status "notDone" :type "function" :notes "")
		(:name "loop" :status "notDone" :type "macro" :notes "")
		(:name "loop-finish" :status "notDone" :type "macro" :notes "")
		(:name "lower-case-p" :status "notDone" :type "function" :notes ""))
	  ("M"
		(:name "machine-instance" :status "notDone" :type "function" :notes "")
		(:name "machine-type" :status "notDone" :type "function" :notes "")
		(:name "machine-version" :status "notDone" :type "function" :notes "")
		(:name "macro-function" :status "notDone" :type "function" :notes "")
		(:name "macroexpand" :status "notDone" :type "function" :notes "")
		(:name "macroexpand-1" :status "notDone" :type "function" :notes "")
		(:name "*macroexpand-hook*" :status "notDone" :type "variable" :notes "")
		(:name "make-array" :status "notDone" :type "function" :notes "")
		(:name "make-broadcast-stream" :status "notDone" :type "function" :notes "")
		(:name "make-char" :status "notDone" :type "function" :notes "")
		(:name "make-concatenated-stream" :status "notDone" :type "function" :notes "")
		(:name "make-condition" :status "notDone" :type "function" :notes "")
		(:name "make-dispatch-macro-character" :status "notDone" :type "function" :notes "")
		(:name "make-echo-stream" :status "notDone" :type "function" :notes "")
		(:name "make-hash-table" :status "notDone" :type "function" :notes "")
		(:name "make-instance" :status "notDone" :type "generic function" :notes "")
		(:name "make-instances-obsolete" :status "notDone" :type "generic function" :notes "")
		(:name "make-list" :status "notDone" :type "function" :notes "")
		(:name "make-load-form" :status "notDone" :type "generic function" :notes "")
		(:name "make-load-form-saving-slots" :status "notDone" :type "function" :notes "")
		(:name "make-package" :status "notDone" :type "function" :notes "")
		(:name "make-pathname" :status "notDone" :type "function" :notes "")
		(:name "make-random-state" :status "notDone" :type "function" :notes "")
		(:name "make-sequence" :status "notDone" :type "function" :notes "")
		(:name "make-string" :status "notDone" :type "function" :notes "")
		(:name "make-string-input-stream" :status "notDone" :type "function" :notes "")
		(:name "make-string-output-stream" :status "notDone" :type "function" :notes "")
		(:name "make-symbol" :status "notDone" :type "function" :notes "")
		(:name "make-synonym-stream" :status "notDone" :type "function" :notes "")
		(:name "make-two-way-stream" :status "notDone" :type "function" :notes "")
		(:name "makunbound" :status "notDone" :type "function" :notes "")
		(:name "map" :status "done" :type "function" :notes "Modified. Does not require a return type, as it only takes and returns arrays. Only takes one array.")
		(:name "map-fn" :status "notDone" :type "function" :notes "")
		(:name "map-into" :status "notDone" :type "function" :notes "")
		(:name "mapc" :status "notDone" :type "function" :notes "")
		(:name "mapcan" :status "notDone" :type "function" :notes "")
		(:name "mapcar" :status "notDone" :type "function" :notes "")
		(:name "mapcon" :status "notDone" :type "function" :notes "")
		(:name "maphash" :status "notDone" :type "function" :notes "")
		(:name "mapl" :status "notDone" :type "function" :notes "")
		(:name "maplist" :status "notDone" :type "function" :notes "")
		(:name "mapping" :status "notDone" :type "macro" :notes "")
		(:name "mask" :status "notDone" :type "function" :notes "")
		(:name "mask-field" :status "notDone" :type "function" :notes "")
		(:name "max" :status "notDone" :type "function" :notes "")
		(:name "maximize" :status "notDone" :type "loop clause" :notes "")
		(:name "maximizing" :status "notDone" :type "loop clause" :notes "")
		(:name "member" :status "notDone" :type "function" :notes "")
		(:name "member-if" :status "notDone" :type "function" :notes "")
		(:name "member-if-not" :status "notDone" :type "function" :notes "")
		(:name "merge" :status "notDone" :type "function" :notes "")
		(:name "merge-pathnames" :status "notDone" :type "function" :notes "")
		(:name "method-combination-error" :status "notDone" :type "function" :notes "")
		(:name "method-qualifiers" :status "notDone" :type "generic function" :notes "")
		(:name "min" :status "notDone" :type "function" :notes "")
		(:name "mingle" :status "notDone" :type "function" :notes "")
		(:name "minimize" :status "notDone" :type "loop clause" :notes "")
		(:name "minimizing" :status "notDone" :type "loop clause" :notes "")
		(:name "minusp" :status "notDone" :type "function" :notes "")
		(:name "mismatch" :status "notDone" :type "function" :notes "")
		(:name "%" :status "done" :type "function" :notes "Renamed from \"mod\".")
		(:name "*modules*" :status "notDone" :type "variable" :notes "")
		(:name "most-negative-double-float" :status "notDone" :type "constant" :notes "")
		(:name "most-negative-fixnum" :status "notDone" :type "constant" :notes "")
		(:name "most-negative-long-float" :status "notDone" :type "constant" :notes "")
		(:name "most-negative-short-float" :status "notDone" :type "constant" :notes "")
		(:name "most-negative-single-float" :status "notDone" :type "constant" :notes "")
		(:name "most-positive-double-float" :status "notDone" :type "constant" :notes "")
		(:name "most-positive-fixnum" :status "notDone" :type "constant" :notes "")
		(:name "most-positive-long-float" :status "notDone" :type "constant" :notes "")
		(:name "most-positive-short-float" :status "notDone" :type "constant" :notes "")
		(:name "most-positive-single-float" :status "notDone" :type "constant" :notes "")
		(:name "muffle-warning" :status "notDone" :type "function" :notes "")
		(:name "multiple-value-bind" :status "notDone" :type "macro" :notes "")
		(:name "multiple-value-call" :status "notDone" :type "special form" :notes "")
		(:name "multiple-value-list" :status "notDone" :type "macro" :notes "")
		(:name "multiple-value-prog1" :status "notDone" :type "special form" :notes "")
		(:name "multiple-value-setq" :status "notDone" :type "macro" :notes "")
		(:name "multiple-values-limit" :status "notDone" :type "constant" :notes ""))
	  ("N"
		(:name "name-char" :status "notDone" :type "function" :notes "")
		(:name "named" :status "notDone" :type "loop clause" :notes "")
		(:name "namestring" :status "notDone" :type "function" :notes "")
		(:name "nbutlast" :status "notDone" :type "function" :notes "")
		(:name "nconc" :status "notDone" :type "function" :notes "")
		(:name "nconc" :status "notDone" :type "loop clause" :notes "")
		(:name "nconcing" :status "notDone" :type "loop clause" :notes "")
		(:name "never" :status "notDone" :type "loop clause" :notes "")
		(:name "next-in" :status "notDone" :type "macro" :notes "")
		(:name "next-method-p" :status "notDone" :type "function" :notes "")
		(:name "next-out" :status "notDone" :type "function" :notes "")
		(:name "nil" :status "notDone" :type "constant" :notes "")
		(:name "nintersection" :status "notDone" :type "function" :notes "")
		(:name "ninth" :status "notDone" :type "function" :notes "")
		(:name "no-applicable-method" :status "notDone" :type "generic function" :notes "")
		(:name "no-next-method" :status "notDone" :type "generic function" :notes "")
		(:name "not" :status "done" :type "macro (was function)" :notes "Modified. Has short-circuiting capabilities.")
		(:name "notany" :status "notDone" :type "function" :notes "")
		(:name "notevery" :status "notDone" :type "function" :notes "")
		(:name "nreconc" :status "notDone" :type "function" :notes "")
		(:name "nreverse" :status "notDone" :type "function" :notes "")
		(:name "nset-difference" :status "notDone" :type "function" :notes "")
		(:name "nset-exclusive-or" :status "notDone" :type "function" :notes "")
		(:name "nstring-capitalize" :status "notDone" :type "function" :notes "")
		(:name "nstring-downcase" :status "notDone" :type "function" :notes "")
		(:name "nstring-upcase" :status "notDone" :type "function" :notes "")
		(:name "nsublis" :status "notDone" :type "function" :notes "")
		(:name "nsubst" :status "notDone" :type "function" :notes "")
		(:name "nsubst-if" :status "notDone" :type "function" :notes "")
		(:name "nsubst-if-not" :status "notDone" :type "function" :notes "")
		(:name "nsubstitute" :status "notDone" :type "function" :notes "")
		(:name "nsubstitute-if" :status "notDone" :type "function" :notes "")
		(:name "nsubstitute-if-not" :status "notDone" :type "function" :notes "")
		(:name "nth" :status "done" :type "function" :notes "Modified. The order of the arguments changed -- it is now (nth list n).")
		(:name "nth-value" :status "notDone" :type "macro" :notes "")
		(:name "nthcdr" :status "notDone" :type "function" :notes "")
		(:name "null" :status "notDone" :type "function" :notes "")
		(:name "numberp" :status "notDone" :type "function" :notes "")
		(:name "numerator" :status "notDone" :type "function" :notes "")
		(:name "nunion" :status "notDone" :type "function" :notes ""))
	  ("O"
		(:name "oddp" :status "notDone" :type "function" :notes "")
		(:name "off-line-port" :status "notDone" :type "declaration specifier" :notes "")
		(:name "open" :status "notDone" :type "function" :notes "")
		(:name "open-stream-p" :status "notDone" :type "function" :notes "")
		(:name "optimizable-series-function" :status "notDone" :type "declaration specifier" :notes "")
		(:name "or" :status "done" :type "macro" :notes "")
		(:name "output-stream-p" :status "notDone" :type "function" :notes ""))
	  ("P"
		(:name "*package*" :status "notDone" :type "variable" :notes "")
		(:name "package-error" :status "notDone" :type "type" :notes "")
		(:name "package-error-package" :status "notDone" :type "function" :notes "")
		(:name "package-name" :status "notDone" :type "function" :notes "")
		(:name "package-nicknames" :status "notDone" :type "function" :notes "")
		(:name "package-shadowing-symbols" :status "notDone" :type "function" :notes "")
		(:name "package-use-list" :status "notDone" :type "function" :notes "")
		(:name "package-used-by-list" :status "notDone" :type "function" :notes "")
		(:name "packagep" :status "notDone" :type "function" :notes "")
		(:name "pairlis" :status "notDone" :type "function" :notes "")
		(:name "parse-integer" :status "notDone" :type "function" :notes "")
		(:name "parse-macro" :status "notDone" :type "function" :notes "")
		(:name "parse-namestring" :status "notDone" :type "function" :notes "")
		(:name "pathname" :status "notDone" :type "function" :notes "")
		(:name "pathname-device" :status "notDone" :type "function" :notes "")
		(:name "pathname-directory" :status "notDone" :type "function" :notes "")
		(:name "pathname-host" :status "notDone" :type "function" :notes "")
		(:name "pathname-match-p" :status "notDone" :type "function" :notes "")
		(:name "pathname-name" :status "notDone" :type "function" :notes "")
		(:name "pathname-type" :status "notDone" :type "function" :notes "")
		(:name "pathname-version" :status "notDone" :type "function" :notes "")
		(:name "pathnamep" :status "notDone" :type "function" :notes "")
		(:name "peek-char" :status "notDone" :type "function" :notes "")
		(:name "phase" :status "notDone" :type "function" :notes "")
		(:name "pi" :status "notDone" :type "constant" :notes "")
		(:name "plusp" :status "notDone" :type "function" :notes "")
		(:name "pop" :status "notDone" :type "macro" :notes "")
		(:name "position" :status "notDone" :type "function" :notes "")
		(:name "position-if" :status "notDone" :type "function" :notes "")
		(:name "position-if-not" :status "notDone" :type "function" :notes "")
		(:name "positions" :status "notDone" :type "function" :notes "")
		(:name "pprint-dispatch" :status "notDone" :type "function" :notes "")
		(:name "pprint-exit-if-list-exhausted" :status "notDone" :type "macro" :notes "")
		(:name "pprint-fill" :status "notDone" :type "function" :notes "")
		(:name "pprint-indent" :status "notDone" :type "function" :notes "")
		(:name "pprint-linear" :status "notDone" :type "function" :notes "")
		(:name "pprint-logical-block" :status "notDone" :type "macro" :notes "")
		(:name "pprint-newline" :status "notDone" :type "function" :notes "")
		(:name "pprint-pop" :status "notDone" :type "macro" :notes "")
		(:name "pprint-tab" :status "notDone" :type "function" :notes "")
		(:name "pprint-tabular" :status "notDone" :type "function" :notes "")
		(:name "previous" :status "notDone" :type "function" :notes "")
		(:name "prin1" :status "notDone" :type "function" :notes "")
		(:name "*print-array*" :status "notDone" :type "variable" :notes "")
		(:name "*print-base*" :status "notDone" :type "variable" :notes "")
		(:name "*print-case*" :status "notDone" :type "variable" :notes "")
		(:name "*print-circle*" :status "notDone" :type "variable" :notes "")
		(:name "*print-escape*" :status "notDone" :type "variable" :notes "")
		(:name "*print-gensym*" :status "notDone" :type "variable" :notes "")
		(:name "*print-length*" :status "notDone" :type "variable" :notes "")
		(:name "*print-level*" :status "notDone" :type "variable" :notes "")
		(:name "*print-lines*" :status "notDone" :type "variable" :notes "")
		(:name "*print-miser-width*" :status "notDone" :type "variable" :notes "")
		(:name "print-object" :status "notDone" :type "generic function" :notes "")
		(:name "*print-pprint-dispatch*" :status "notDone" :type "variable" :notes "")
		(:name "*print-pretty*" :status "notDone" :type "variable" :notes "")
		(:name "*print-radix*" :status "notDone" :type "variable" :notes "")
		(:name "*print-readably*" :status "notDone" :type "variable" :notes "")
		(:name "*print-right-margin*" :status "notDone" :type "variable" :notes "")
		(:name "print-unreadable-object" :status "notDone" :type "macro" :notes "")
		(:name "probe-file" :status "notDone" :type "function" :notes "")
		(:name "proclaim" :status "notDone" :type "function" :notes "")
		(:name "producing" :status "notDone" :type "macro" :notes "")
		(:name "prog" :status "notDone" :type "macro" :notes "")
		(:name "prog*" :status "notDone" :type "macro" :notes "")
		(:name "prog1" :status "notDone" :type "macro" :notes "")
		(:name "prog2" :status "notDone" :type "macro" :notes "")
		(:name "progn" :status "done" :type "special form" :notes "")
		(:name "program-error" :status "notDone" :type "type" :notes "")
		(:name "progv" :status "notDone" :type "special form" :notes "")
		(:name "propagate-alterability" :status "notDone" :type "declaration specifier" :notes "")
		(:name "provide" :status "notDone" :type "function" :notes "")
		(:name "psetf" :status "notDone" :type "macro" :notes "")
		(:name "psetq" :status "notDone" :type "macro" :notes "")
		(:name "push" :status "done" :type "function (was macro)" :notes "Modified. Takes a value and a list (not a place).")
		(:name "pushnew" :status "notDone" :type "macro" :notes ""))
	  ("Q"
		(:name "*query-io*" :status "notDone" :type "variable" :notes "")
		(:name "quote" :status "done" :type "special form" :notes ""))
	  ("R"
		(:name "random" :status "notDone" :type "function" :notes "")
		(:name "*random-state*" :status "notDone" :type "variable" :notes "")
		(:name "random-state-p" :status "notDone" :type "function" :notes "")
		(:name "rassoc" :status "notDone" :type "function" :notes "")
		(:name "rassoc-if" :status "notDone" :type "function" :notes "")
		(:name "rassoc-if-not" :status "notDone" :type "function" :notes "")
		(:name "rational" :status "notDone" :type "function" :notes "")
		(:name "rationalize" :status "notDone" :type "function" :notes "")
		(:name "rationalp" :status "notDone" :type "function" :notes "")
		(:name "read" :status "notDone" :type "function" :notes "")
		(:name "*read-base*" :status "notDone" :type "variable" :notes "")
		(:name "read-byte" :status "notDone" :type "function" :notes "")
		(:name "read-char" :status "notDone" :type "function" :notes "")
		(:name "read-char-no-hang" :status "notDone" :type "function" :notes "")
		(:name "*read-default-float-format*" :status "notDone" :type "variable" :notes "")
		(:name "read-delimited-list" :status "notDone" :type "function" :notes "")
		(:name "*read-eval*" :status "notDone" :type "variable" :notes "")
		(:name "read-from-string" :status "notDone" :type "function" :notes "")
		(:name "read-line" :status "notDone" :type "function" :notes "")
		(:name "read-preserving-whitespace" :status "notDone" :type "function" :notes "")
		(:name "*read-suppress*" :status "notDone" :type "variable" :notes "")
		(:name "*readtable*" :status "notDone" :type "variable" :notes "")
		(:name "readtable-case" :status "notDone" :type "function" :notes "")
		(:name "readtablep" :status "notDone" :type "function" :notes "")
		(:name "realp" :status "notDone" :type "function" :notes "")
		(:name "realpart" :status "notDone" :type "function" :notes "")
		(:name "reduce" :status "notDone" :type "function" :notes "")
		(:name "reinitialize-instance" :status "notDone" :type "generic function" :notes "")
		(:name "rem" :status "notDone" :type "function" :notes "")
		(:name "remf" :status "notDone" :type "macro" :notes "")
		(:name "remhash" :status "notDone" :type "function" :notes "")
		(:name "remove" :status "notDone" :type "function" :notes "")
		(:name "remove-duplicates" :status "notDone" :type "function" :notes "")
		(:name "remove-method" :status "notDone" :type "generic function" :notes "")
		(:name "remprop" :status "notDone" :type "function" :notes "")
		(:name "rename-file" :status "notDone" :type "function" :notes "")
		(:name "rename-package" :status "notDone" :type "function" :notes "")
		(:name "repeat" :status "notDone" :type "loop clause" :notes "")
		(:name "replace" :status "notDone" :type "function" :notes "")
		(:name "require" :status "notDone" :type "function" :notes "")
		(:name "rest" :status "notDone" :type "function" :notes "")
		(:name "restart" :status "notDone" :type "type" :notes "")
		(:name "restart-bind" :status "notDone" :type "macro" :notes "")
		(:name "restart-case" :status "notDone" :type "macro" :notes "")
		(:name "restart-name" :status "notDone" :type "function" :notes "")
		(:name "result-of" :status "notDone" :type "function" :notes "")
		(:name "return" :status "notDone" :type "macro" :notes "")
		(:name "return" :status "notDone" :type "loop clause" :notes "")
		(:name "return-from" :status "notDone" :type "special form" :notes "")
		(:name "revappend" :status "notDone" :type "function" :notes "")
		(:name "reverse" :status "notDone" :type "function" :notes "")
		(:name "room" :status "notDone" :type "function" :notes "")
		(:name "rotatef" :status "notDone" :type "macro" :notes "")
		(:name "round" :status "notDone" :type "function" :notes "")
		(:name "row-major-aref" :status "notDone" :type "function" :notes "")
		(:name "rplaca" :status "notDone" :type "function" :notes "")
		(:name "rplacd" :status "notDone" :type "function" :notes ""))
	  ("S"
		(:name "sbit" :status "notDone" :type "function" :notes "")
		(:name "scale-float" :status "notDone" :type "function" :notes "")
		(:name "scan" :status "notDone" :type "function" :notes "")
		(:name "scan-alist" :status "notDone" :type "function" :notes "")
		(:name "scan-file" :status "notDone" :type "function" :notes "")
		(:name "scan-fn" :status "notDone" :type "function" :notes "")
		(:name "scan-fn-inclusive" :status "notDone" :type "function" :notes "")
		(:name "scan-hash" :status "notDone" :type "function" :notes "")
		(:name "scan-lists-of-lists" :status "notDone" :type "function" :notes "")
		(:name "scan-lists-of-lists-fringe" :status "notDone" :type "function" :notes "")
		(:name "scan-multiple" :status "notDone" :type "function" :notes "")
		(:name "scan-plist" :status "notDone" :type "function" :notes "")
		(:name "scan-range" :status "notDone" :type "function" :notes "")
		(:name "scan-sublists" :status "notDone" :type "function" :notes "")
		(:name "scan-symbols" :status "notDone" :type "function" :notes "")
		(:name "schar" :status "notDone" :type "function" :notes "")
		(:name "search" :status "notDone" :type "function" :notes "")
		(:name "second" :status "done" :type "function" :notes "Modified. Returns the second element of any sequence-like object (actually, simply returns element 1 of any object that has it).")
		(:name "series" :status "notDone" :type "type specifier" :notes "")
		(:name "series" :status "notDone" :type "function" :notes "")
		(:name "series-element-type" :status "notDone" :type "type specifier" :notes "")
		(:name "serious-condition" :status "notDone" :type "type" :notes "")
		(:name "set" :status "notDone" :type "function" :notes "")
		(:name "set-char-bit" :status "notDone" :type "function" :notes "")
		(:name "set-difference" :status "notDone" :type "function" :notes "")
		(:name "set-dispatch-macro-character" :status "notDone" :type "function" :notes "")
		(:name "set-exclusive-or" :status "notDone" :type "function" :notes "")
		(:name "set-macro-character" :status "notDone" :type "function" :notes "")
		(:name "set-pprint-dispatch" :status "notDone" :type "function" :notes "")
		(:name "set-syntax-from-char" :status "notDone" :type "function" :notes "")
		(:name "setf" :status "notDone" :type "macro" :notes "")
		(:name "setq" :status "done" :type "macro (was special form)" :notes "")
		(:name "seventh" :status "notDone" :type "function" :notes "")
		(:name "shadow" :status "notDone" :type "function" :notes "")
		(:name "shadowing-import" :status "notDone" :type "function" :notes "")
		(:name "shared-initialize" :status "notDone" :type "generic function" :notes "")
		(:name "shiftf" :status "notDone" :type "macro" :notes "")
		(:name "short-float-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "short-float-negative-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "short-site-name" :status "notDone" :type "function" :notes "")
		(:name "signal" :status "notDone" :type "function" :notes "")
		(:name "signum" :status "notDone" :type "function" :notes "")
		(:name "simple-bit-vector-p" :status "notDone" :type "function" :notes "")
		(:name "simple-condition" :status "notDone" :type "type" :notes "")
		(:name "simple-condition-format-arguments" :status "notDone" :type "function" :notes "")
		(:name "simple-condition-format-string" :status "notDone" :type "function" :notes "")
		(:name "simple-error" :status "notDone" :type "type" :notes "")
		(:name "simple-string-p" :status "notDone" :type "function" :notes "")
		(:name "simple-type-error" :status "notDone" :type "type" :notes "")
		(:name "simple-vector-p" :status "notDone" :type "function" :notes "")
		(:name "simple-warning" :status "notDone" :type "type" :notes "")
		(:name "sin" :status "notDone" :type "function" :notes "")
		(:name "single-float-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "single-float-negative-epsilon" :status "notDone" :type "constant" :notes "")
		(:name "sinh" :status "notDone" :type "function" :notes "")
		(:name "sixth" :status "notDone" :type "function" :notes "")
		(:name "sleep" :status "notDone" :type "function" :notes "")
		(:name "slot-boundp" :status "notDone" :type "function" :notes "")
		(:name "slot-exists-p" :status "notDone" :type "function" :notes "")
		(:name "slot-makunbound" :status "notDone" :type "function" :notes "")
		(:name "slot-missing" :status "notDone" :type "generic function" :notes "")
		(:name "slot-unbound" :status "notDone" :type "generic function" :notes "")
		(:name "slot-value" :status "notDone" :type "function" :notes "")
		(:name "software-type" :status "notDone" :type "function" :notes "")
		(:name "software-version" :status "notDone" :type "function" :notes "")
		(:name "some" :status "notDone" :type "function" :notes "")
		(:name "sort" :status "notDone" :type "function" :notes "")
		(:name "special-form-p" :status "notDone" :type "function" :notes "")
		(:name "split" :status "notDone" :type "function" :notes "")
		(:name "split-if" :status "notDone" :type "function" :notes "")
		(:name "sqrt" :status "notDone" :type "function" :notes "")
		(:name "stable-sort" :status "notDone" :type "function" :notes "")
		(:name "standard-char-p" :status "notDone" :type "function" :notes "")
		(:name "*standard-input*" :status "notDone" :type "variable" :notes "")
		(:name "*standard-output*" :status "notDone" :type "variable" :notes "")
		(:name "step" :status "notDone" :type "macro" :notes "")
		(:name "storage-condition" :status "notDone" :type "type" :notes "")
		(:name "store-value" :status "notDone" :type "function" :notes "")
		(:name "stream-element-type" :status "notDone" :type "function" :notes "")
		(:name "stream-error" :status "notDone" :type "type" :notes "")
		(:name "stream-error-stream" :status "notDone" :type "function" :notes "")
		(:name "stream-external-format" :status "notDone" :type "function" :notes "")
		(:name "streamp" :status "notDone" :type "function" :notes "")
		(:name "string" :status "notDone" :type "function" :notes "")
		(:name "string-capitalize" :status "notDone" :type "function" :notes "")
		(:name "string-char-p" :status "notDone" :type "function" :notes "")
		(:name "string-downcase" :status "notDone" :type "function" :notes "")
		(:name "string-equal" :status "notDone" :type "function" :notes "")
		(:name "string-greaterp" :status "notDone" :type "function" :notes "")
		(:name "string-left-trim" :status "notDone" :type "function" :notes "")
		(:name "string-lessp" :status "notDone" :type "function" :notes "")
		(:name "string-not-equal" :status "notDone" :type "function" :notes "")
		(:name "string-not-greaterp" :status "notDone" :type "function" :notes "")
		(:name "string-not-lessp" :status "notDone" :type "function" :notes "")
		(:name "string-right-trim" :status "notDone" :type "function" :notes "")
		(:name "string-trim" :status "notDone" :type "function" :notes "")
		(:name "string-upcase" :status "notDone" :type "function" :notes "")
		(:name "string/=" :status "notDone" :type "function" :notes "")
		(:name "string&lt;" :status "notDone" :type "function" :notes "")
		(:name "string&lt;=" :status "notDone" :type "function" :notes "")
		(:name "string&gt;" :status "notDone" :type "function" :notes "")
		(:name "string&gt;=" :status "notDone" :type "function" :notes "")
		(:name "stringp" :status "notDone" :type "function" :notes "")
		(:name "sublis" :status "notDone" :type "function" :notes "")
		(:name "subseq" :status "notDone" :type "function" :notes "")
		(:name "subseries" :status "notDone" :type "function" :notes "")
		(:name "subsetp" :status "notDone" :type "function" :notes "")
		(:name "subst" :status "notDone" :type "function" :notes "")
		(:name "subst-if" :status "notDone" :type "function" :notes "")
		(:name "subst-if-not" :status "notDone" :type "function" :notes "")
		(:name "substitute" :status "notDone" :type "function" :notes "")
		(:name "substitute-if" :status "notDone" :type "function" :notes "")
		(:name "substitute-if-not" :status "notDone" :type "function" :notes "")
		(:name "subtypep" :status "notDone" :type "function" :notes "")
		(:name "sum" :status "notDone" :type "loop clause" :notes "")
		(:name "summing" :status "notDone" :type "loop clause" :notes "")
		(:name "*suppress-series-warnings*" :status "notDone" :type "variable" :notes "")
		(:name "svref" :status "notDone" :type "function" :notes "")
		(:name "sxhash" :status "notDone" :type "function" :notes "")
		(:name "symbol-function" :status "notDone" :type "function" :notes "")
		(:name "symbol-macrolet" :status "notDone" :type "special form" :notes "")
		(:name "symbol-name" :status "notDone" :type "function" :notes "")
		(:name "symbol-package" :status "notDone" :type "function" :notes "")
		(:name "symbol-plist" :status "notDone" :type "function" :notes "")
		(:name "symbol-value" :status "notDone" :type "function" :notes "")
		(:name "symbolp" :status "notDone" :type "function" :notes "")
		(:name "synonym-stream-symbol" :status "notDone" :type "function" :notes ""))
	  ("T"
		(:name "t" :status "notDone" :type "constant" :notes "")
		(:name "tagbody" :status "notDone" :type "special form" :notes "")
		(:name "tailp" :status "notDone" :type "function" :notes "")
		(:name "tan" :status "notDone" :type "function" :notes "")
		(:name "tanh" :status "notDone" :type "function" :notes "")
		(:name "tenth" :status "notDone" :type "function" :notes "")
		(:name "*terminal-io*" :status "notDone" :type "variable" :notes "")
		(:name "terminate-producing" :status "notDone" :type "macro" :notes "")
		(:name "terpri" :status "notDone" :type "function" :notes "")
		(:name "the" :status "notDone" :type "special form" :notes "")
		(:name "thereis" :status "notDone" :type "loop clause" :notes "")
		(:name "third" :status "done" :type "function" :notes "Modified. Returns the third element of any sequence-like object (actually, simple returns element 2 of any object that has it).")
		(:name "throw" :status "notDone" :type "special form" :notes "")
		(:name "time" :status "notDone" :type "macro" :notes "")
		(:name "to-alter" :status "notDone" :type "function" :notes "")
		(:name "trace" :status "notDone" :type "macro" :notes "")
		(:name "*trace-output*" :status "notDone" :type "variable" :notes "")
		(:name "translate-logical-pathname" :status "notDone" :type "function" :notes "")
		(:name "translate-pathname" :status "notDone" :type "function" :notes "")
		(:name "tree-equal" :status "notDone" :type "function" :notes "")
		(:name "truename" :status "notDone" :type "function" :notes "")
		(:name "truncate" :status "notDone" :type "function" :notes "")
		(:name "two-way-stream-input-stream" :status "notDone" :type "function" :notes "")
		(:name "two-way-stream-output-stream" :status "notDone" :type "function" :notes "")
		(:name "type-error" :status "notDone" :type "type" :notes "")
		(:name "type-error-datum" :status "notDone" :type "function" :notes "")
		(:name "type-error-expected-type" :status "notDone" :type "function" :notes "")
		(:name "type-of" :status "notDone" :type "function" :notes "")
		(:name "typecase" :status "notDone" :type "macro" :notes "")
		(:name "typep" :status "notDone" :type "function" :notes ""))
	  ("U"
		(:name "unbound-variable" :status "notDone" :type "type" :notes "")
		(:name "undefined-function" :status "notDone" :type "type" :notes "")
		(:name "unexport" :status "notDone" :type "function" :notes "")
		(:name "unintern" :status "notDone" :type "function" :notes "")
		(:name "union" :status "notDone" :type "function" :notes "")
		(:name "unless" :status "notDone" :type "macro" :notes "")
		(:name "unless" :status "notDone" :type "loop clause" :notes "")
		(:name "unread-char" :status "notDone" :type "function" :notes "")
		(:name "until" :status "notDone" :type "loop clause" :notes "")
		(:name "until" :status "notDone" :type "function" :notes "")
		(:name "until-if" :status "notDone" :type "function" :notes "")
		(:name "untrace" :status "notDone" :type "macro" :notes "")
		(:name "unuse-package" :status "notDone" :type "function" :notes "")
		(:name "unwind-protect" :status "notDone" :type "special form" :notes "")
		(:name "update-instance-for-different-class" :status "notDone" :type "generic function" :notes "")
		(:name "update-instance-for-redefined-class" :status "notDone" :type "generic function" :notes "")
		(:name "upgraded-array-element-type" :status "notDone" :type "function" :notes "")
		(:name "upgraded-complex-part-type" :status "notDone" :type "function" :notes "")
		(:name "upper-case-p" :status "notDone" :type "function" :notes "")
		(:name "use-package" :status "notDone" :type "function" :notes "")
		(:name "use-value" :status "notDone" :type "function" :notes "")
		(:name "user-homedir-pathname" :status "notDone" :type "function" :notes ""))
	  ("V"
		(:name "values" :status "notDone" :type "function" :notes "")
		(:name "values-list" :status "notDone" :type "function" :notes "")
		(:name "variable-information" :status "notDone" :type "function" :notes "")
		(:name "vector" :status "notDone" :type "function" :notes "")
		(:name "vector-pop" :status "notDone" :type "function" :notes "")
		(:name "vector-push" :status "notDone" :type "function" :notes "")
		(:name "vector-push-extend" :status "notDone" :type "function" :notes "")
		(:name "vectorp" :status "notDone" :type "function" :notes ""))
	  ("W"
		(:name "warn" :status "notDone" :type "function" :notes "")
		(:name "warn" :status "notDone" :type "function" :notes "")
		(:name "warning" :status "notDone" :type "type" :notes "")
		(:name "when" :status "done" :type "macro" :notes "")
		(:name "when" :status "notDone" :type "loop clause" :notes "")
		(:name "while" :status "notDone" :type "loop clause" :notes "")
		(:name "wild-pathname-p" :status "notDone" :type "function" :notes "")
		(:name "with" :status "notDone" :type "loop clause" :notes "")
		(:name "with-accessors" :status "notDone" :type "macro" :notes "")
		(:name "with-added-methods" :status "notDone" :type "special form" :notes "")
		(:name "with-compilation-unit" :status "notDone" :type "macro" :notes "")
		(:name "with-condition-restarts" :status "notDone" :type "macro" :notes "")
		(:name "with-hash-table-iterator" :status "notDone" :type "macro" :notes "")
		(:name "with-input-from-string" :status "notDone" :type "macro" :notes "")
		(:name "with-open-file" :status "notDone" :type "macro" :notes "")
		(:name "with-open-stream" :status "notDone" :type "macro" :notes "")
		(:name "with-output-to-string" :status "notDone" :type "macro" :notes "")
		(:name "with-package-iterator" :status "notDone" :type "macro" :notes "")
		(:name "with-simple-restart" :status "notDone" :type "macro" :notes "")
		(:name "with-slots" :status "notDone" :type "macro" :notes "")
		(:name "with-standard-io-syntax" :status "notDone" :type "macro" :notes "")
		(:name "write" :status "notDone" :type "function" :notes "")
		(:name "write-byte" :status "notDone" :type "function" :notes "")
		(:name "write-char" :status "notDone" :type "function" :notes "")
		(:name "write-string" :status "notDone" :type "function" :notes "")
		(:name "write-to-string" :status "notDone" :type "function" :notes ""))
	  ("Y"
		(:name "y-or-n-p" :status "notDone" :type "function" :notes "")
		(:name "yes-or-no-p" :status "notDone" :type "function" :notes ""))
	  ("Z"
		(:name "zerop" :status "notDone" :type "function" :notes ""))))
